D. Ориентация в лабиринте

Ограничение времени	2 секунды
Ограничение памяти	512Mb

Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt

Януш Воронов решил провести очередную выставку своих работ.
В качестве места проведения он выбрал один из этажей заброшенного
здания прямоугольной формы N×M метров.

У Януша есть схема этажа в виде N×M клеток
(каждая клетка задаёт пространство площадью 1×1 метров),
где «#» обозначает кусок стены, а «.» — пространство,
доступное для перемещения посетителей.

Также на карте ровно одна клетка обозначена как «S» — участок,
из которого посетители начнут осмотр выставки.

Гарантируется, что планировка этажа удовлетворяет следующим условиям:
•	Все клетки в первых и последних строках / столбцах схемы являются стенами.
•	От стартовой клетки можно добраться до любой пустой клетки,
перемещаясь только вверх / вниз / влево / вправо.
•	Между любой парой пустых клеток на схеме существует ровно один путь,
возможно проходящий через стартовую клетку.

Януш хочет добиться идеального впечатления от осмотра выставки,
поэтому хочет учесть направление, в котором посетитель впервые
зайдет в каждую свободную клетку.

Гарантируется, что такое направление определяется однозначно.
Помогите Янушу и выведите для каждой клетки направление, в котором посетитель
впервые зайдет в эту клетку при осмотре выставки.

Формат ввода
В первой строке даны два целых числа N и M (3≤N,M≤500)
— количество строк и столбцов на схеме этажа.
В следующих N строках расположено по M символов из множества (#,.,S).
Гарантируется, что
•	Все клетки в первых и последних строках / столбцах схемы равны #.
•	На схеме расположена ровно одна стартовая клетка S.
•	От стартовой клетки можно добраться до любой пустой клетки,
перемещаясь только вверх / вниз / влево / вправо.
•	Между любой парой пустых клеток на схеме существует ровно один путь,
возможно проходящий через стартовую клетку.

Формат вывода
Выведите N строк по M символов в каждой — схему этажа, где
каждая пустая клетка . заменена на направление первого захода в эту клетку.
Занумеруем все строки от 1 до N сверху вниз, все столбцы — от 1 до M слева направо.
В таком случае пустая клетка (r,c) должна содержать:
•	L — если в клетку (r,c) зашли из клетки (r,c+1);
•	R — если в клетку (r,c) зашли из клетки (r,c−1);
•	U — если в клетку (r,c) зашли из клетки (r+1,c);
•	D — если в клетку (r,c) зашли из клетки (r−1,c).

Пример 1

Ввод

5 8
########
#......#
#.#S#.##
##...###
########

Вывод
########
#LLURRR#
#D#S#D##
##LDR###
########

---------------------------

Пример 2

Ввод
3 3
###
#S#
###

Вывод
###
#S#
###


Примечания
Рассмотрим первый тестовый пример.
Стартовой является клетка (3,4).
Из стартовой клетки посетитель может попасть в клетку (2,4),
сделав шаг вверх, или в клетку (4,4), пройдя вниз.
Из клетки (2,4) можно пойти налево в клетки (2,3) и (2,2);
из клетки (2,2) можно дойти до клетки (3,2), пройдя вниз.
Также из клетки (2,4) можно пройти направо в клетки (2,5), (2,6) и (2,7);
из клетки (2,6) можно попасть в клетку (3,6), пройдя вниз.
Из клетки (4,4) можно пройти всего в две клетки — налево в (4,3) и направо в (4,5).
Во втором тестовом примере посетитель никуда не может пройти из стартовой клетки.